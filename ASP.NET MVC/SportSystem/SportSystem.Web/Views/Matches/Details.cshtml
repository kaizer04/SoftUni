@model SportSystem.Web.ViewModels.MatchDetailsViewModel
@{
    ViewBag.Title = "Details";
}

<h2>Match:</h2>

<div>
    <p><span class="">@Html.DisplayNameFor(x => x.HomeTeamName):</span> <span>@Html.DisplayFor(x => x.HomeTeamName)</span></p>
    <p><span class="">@Html.DisplayNameFor(x => x.AwayTeamName):</span> <span>@Html.DisplayFor(x => x.AwayTeamName)</span></p>
    <p><span class="">@Html.DisplayNameFor(x => x.DateTime):</span> <span>@Html.DisplayFor(x => x.DateTime)</span></p>
</div>


<div id="comments">
    <h2>Comments</h2>
    @if (Model.Comments.Any())
    {
        @Html.DisplayFor(x => x.Comments)
    }
    else
    {
        <span>No comments</span>
    }
</div>

<div>
    <h2>Add Comment</h2>
    @using (Ajax.BeginForm("AddComment", "Matches", new { matchId = Model.Id }, new AjaxOptions()
        {
            HttpMethod = "POST",
            InsertionMode = InsertionMode.InsertAfter,
            UpdateTargetId = "comments",
            OnSuccess = "onAddCommentSuccess"
        }))
    {
        @Html.AntiForgeryToken()
        
        <input type="text" id="content" name="content" value="" />
        <input type="submit" name="name" value="Add Comment" />
    }
</div>

@section scripts {
    <script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
    <script>
        function onAddCommentSuccess() {
            document.getElementById("content").value = '';
        }

        function onVoteSuccess() {
            var button = document.getElementById("vote-button");
            button.parentNode.removeChild(button);
        }
    </script>
}